/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:87
          throw new SequelizeErrors.ConnectionRefusedError(err);
                ^

ConnectionRefusedError [SequelizeConnectionRefusedError]: connect ECONNREFUSED 69.62.95.248:3306
    at ConnectionManager.connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:87:17)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async ConnectionManager._connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:24)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32
    at async ConnectionManager.getConnection (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:305:26
    at async MySQLQueryInterface.tableExists (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:102:17)
    at async Workshop.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:939:21)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9) {
  parent: Error: connect ECONNREFUSED 69.62.95.248:3306
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1549:16)
   From event:
      at /root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:146:13
      at new Promise (<anonymous>)
      at Connection.connect (/root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:132:12)
      at Object.createConnection (/root/gestionteatro/backend/node_modules/mariadb/promise.js:37:17)
      at ConnectionManager.connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:71:41)
      at ConnectionManager._connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:61)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32
      at async ConnectionManager.getConnection (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:305:26 {
    errno: -111,
    code: 'ECONNREFUSED',
    syscall: 'connect',
    address: '69.62.95.248',
    port: 3306,
    fatal: true,
    sqlState: 'HY000'
  },
  original: Error: connect ECONNREFUSED 69.62.95.248:3306
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1549:16)
   From event:
      at /root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:146:13
      at new Promise (<anonymous>)
      at Connection.connect (/root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:132:12)
      at Object.createConnection (/root/gestionteatro/backend/node_modules/mariadb/promise.js:37:17)
      at ConnectionManager.connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:71:41)
      at ConnectionManager._connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:61)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32
      at async ConnectionManager.getConnection (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:305:26 {
    errno: -111,
    code: 'ECONNREFUSED',
    syscall: 'connect',
    address: '69.62.95.248',
    port: 3306,
    fatal: true,
    sqlState: 'HY000'
  }
}

Node.js v18.19.1
/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:87
          throw new SequelizeErrors.ConnectionRefusedError(err);
                ^

ConnectionRefusedError [SequelizeConnectionRefusedError]: connect ECONNREFUSED 69.62.95.248:3306
    at ConnectionManager.connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:87:17)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async ConnectionManager._connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:24)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32
    at async ConnectionManager.getConnection (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:305:26
    at async MySQLQueryInterface.tableExists (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:102:17)
    at async Workshop.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:939:21)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9) {
  parent: Error: connect ECONNREFUSED 69.62.95.248:3306
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1549:16)
   From event:
      at /root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:146:13
      at new Promise (<anonymous>)
      at Connection.connect (/root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:132:12)
      at Object.createConnection (/root/gestionteatro/backend/node_modules/mariadb/promise.js:37:17)
      at ConnectionManager.connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:71:41)
      at ConnectionManager._connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:61)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32
      at async ConnectionManager.getConnection (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:305:26 {
    errno: -111,
    code: 'ECONNREFUSED',
    syscall: 'connect',
    address: '69.62.95.248',
    port: 3306,
    fatal: true,
    sqlState: 'HY000'
  },
  original: Error: connect ECONNREFUSED 69.62.95.248:3306
      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1549:16)
   From event:
      at /root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:146:13
      at new Promise (<anonymous>)
      at Connection.connect (/root/gestionteatro/backend/node_modules/mariadb/lib/connection.js:132:12)
      at Object.createConnection (/root/gestionteatro/backend/node_modules/mariadb/promise.js:37:17)
      at ConnectionManager.connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/connection-manager.js:71:41)
      at ConnectionManager._connect (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:61)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32
      at async ConnectionManager.getConnection (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)
      at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:305:26 {
    errno: -111,
    code: 'ECONNREFUSED',
    syscall: 'connect',
    address: '69.62.95.248',
    port: 3306,
    fatal: true,
    sqlState: 'HY000'
  }
}

Node.js v18.19.1
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Server is running on port 8080.
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Quilmes",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p5",
    "productName": "Pizza Fugazzeta (1/2)",
    "quantity": 1,
    "unitPrice": 14000,
    "totalPrice": 14000,
    "isHalf": true,
    "delivery": "Cocina"
  }
]
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): INSERT INTO `SnackBarSales` (`id`,`total`,`saleDate`) VALUES (DEFAULT,?,?);
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (ad5a65a2-bea2-4474-b122-969a45a21446): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 3;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '22';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '22';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (36d96145-8f98-4536-abde-daa73126f630): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Quilmes",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p2",
    "productName": "Coca-Cola",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p5",
    "productName": "Pizza Fugazzeta (1/2)",
    "quantity": 1,
    "unitPrice": 14000,
    "totalPrice": 14000,
    "isHalf": true,
    "delivery": "Cocina"
  }
]
Executing (36d96145-8f98-4536-abde-daa73126f630): INSERT INTO `SnackBarSales` (`id`,`total`,`saleDate`) VALUES (DEFAULT,?,?);
Executing (36d96145-8f98-4536-abde-daa73126f630): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (36d96145-8f98-4536-abde-daa73126f630): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (36d96145-8f98-4536-abde-daa73126f630): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (36d96145-8f98-4536-abde-daa73126f630): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (36d96145-8f98-4536-abde-daa73126f630): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (36d96145-8f98-4536-abde-daa73126f630): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (36d96145-8f98-4536-abde-daa73126f630): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (36d96145-8f98-4536-abde-daa73126f630): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p2';
Executing (36d96145-8f98-4536-abde-daa73126f630): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (36d96145-8f98-4536-abde-daa73126f630): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (36d96145-8f98-4536-abde-daa73126f630): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (36d96145-8f98-4536-abde-daa73126f630): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 4;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show` WHERE `Show`.`id` = '107';
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show` WHERE `Show`.`id` = '107';
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p2",
    "productName": "Coca-Cola",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p4",
    "productName": "Pizza Muzzarella (1/2)",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": true,
    "delivery": "Cocina"
  }
]
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): INSERT INTO `SnackBarSales` (`id`,`total`,`saleDate`) VALUES (DEFAULT,?,?);
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p2';
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (132361fb-7005-49de-8350-5ebc5f84d36f): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 5;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '23';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '23';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id` WHERE `Workshop`.`id` = '25a968e8-efcc-4fc0-9548-9d5636c81a1b';
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id` WHERE `Workshop`.`id` = '25a968e8-efcc-4fc0-9548-9d5636c81a1b';
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Quilmes",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p4",
    "productName": "Pizza Muzzarella (1/2)",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": true,
    "delivery": "Cocina"
  }
]
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): INSERT INTO `SnackBarSales` (`id`,`total`,`saleDate`) VALUES (DEFAULT,?,?);
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (d0cb7405-ec72-4fbf-bb29-4f9b824dbf0f): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 6;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '25';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '25';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p3",
    "productName": "Agua sin gas",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p5",
    "productName": "Pizza Fugazzeta (1/2)",
    "quantity": 1,
    "unitPrice": 14000,
    "totalPrice": 14000,
    "isHalf": true,
    "delivery": "Cocina"
  }
]
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `SnackBarSales` (`id`,`total`,`saleDate`) VALUES (DEFAULT,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p3';
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): UPDATE `snackbarproducts` SET `stock`=? WHERE `id` = ?
Executing (4df2755f-10f2-42ff-973c-836a31ab1bb0): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 7;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`brand`,`size`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
node:events:495
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use :::8080
    at Server.setupListenHandle [as _listen2] (node:net:1811:16)
    at listenInCluster (node:net:1859:12)
    at Server.listen (node:net:1947:7)
    at Function.listen (/root/gestionteatro/backend/node_modules/express/lib/application.js:635:24)
    at file:///root/gestionteatro/backend/server.js:24:7
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
Emitted 'error' event on Server instance at:
    at emitErrorNT (node:net:1838:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '::',
  port: 8080
}

Node.js v18.19.1
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`brand`,`size`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`brand`,`size`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`) VALUES (?,?,?,?,?,?,?,?,?);
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`brand`,`size`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`brand`,`size`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?);
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): DELETE FROM `snackbarproducts` WHERE `id` = 'p6'
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): UPDATE `snackbarproducts` SET `sellPrice`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): UPDATE `snackbarproducts` SET `sellPrice`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): DELETE FROM `snackbarproducts` WHERE `id` = 'p5'
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): UPDATE `snackbarproducts` SET `name`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750965020';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750965020';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750965020';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754751084970';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754751084970';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754751084970';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): UPDATE `snackbarproducts` SET `id`=?,`name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`createdAt`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): UPDATE `snackbarproducts` SET `name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): UPDATE `snackbarproducts` SET `name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750850465';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750850465';
Executing (default): UPDATE `snackbarproducts` SET `name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750850465';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): UPDATE `snackbarproducts` SET `name`=?,`category`=?,`brand`=?,`size`=?,`purchasePrice`=?,`sellPrice`=?,`stock`=?,`delivery`=?,`canBeHalf`=?,`halfPrice`=?,`updatedAt`=? WHERE `id` = ?
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:323, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (bb92987e-4ee5-47bc-a69b-ba41380e12fa): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (bb92987e-4ee5-47bc-a69b-ba41380e12fa): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (bb92987e-4ee5-47bc-a69b-ba41380e12fa): ROLLBACK;
Error confirming sale: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.insert (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:2490:35)
    at async SnackBarSale.create (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1362:12)
    at async confirmSale (file:///root/gestionteatro/backend/controllers/saleController.js:14:25) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:325, no: 1054, SQLState: 42S22) Unknown column 'paymentMethod' in 'INSERT INTO'
  sql: INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?); - parameters:[7000,'Tarjeta','2025-08-13 18:42:12.732']
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'paymentMethod' in 'INSERT INTO'",
    sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: [ 7000, 'Tarjeta', '2025-08-13 18:42:12.732' ]
  },
  original: SqlError: (conn:325, no: 1054, SQLState: 42S22) Unknown column 'paymentMethod' in 'INSERT INTO'
  sql: INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?); - parameters:[7000,'Tarjeta','2025-08-13 18:42:12.732']
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'paymentMethod' in 'INSERT INTO'",
    sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: [ 7000, 'Tarjeta', '2025-08-13 18:42:12.732' ]
  },
  sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
  parameters: [ 7000, 'Tarjeta', '2025-08-13 18:42:12.732' ]
}
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): CREATE TABLE IF NOT EXISTS `SnackBarPurchases` (`id` INTEGER NOT NULL auto_increment , `product_id` VARCHAR(255), `quantity` INTEGER NOT NULL, `purchase_price` DECIMAL(10,2) NOT NULL, `purchase_date` DATETIME, PRIMARY KEY (`id`), FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (49bc3219-8da0-4223-9306-9abbc3f93a8e): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (49bc3219-8da0-4223-9306-9abbc3f93a8e): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (49bc3219-8da0-4223-9306-9abbc3f93a8e): ROLLBACK;
Error confirming sale: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.insert (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:2490:35)
    at async SnackBarSale.create (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1362:12)
    at async confirmSale (file:///root/gestionteatro/backend/controllers/saleController.js:14:25) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:328, no: 1054, SQLState: 42S22) Unknown column 'paymentMethod' in 'INSERT INTO'
  sql: INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?); - parameters:[7000,'Tarjeta','2025-08-13 18:51:50.240']
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'paymentMethod' in 'INSERT INTO'",
    sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: [ 7000, 'Tarjeta', '2025-08-13 18:51:50.240' ]
  },
  original: SqlError: (conn:328, no: 1054, SQLState: 42S22) Unknown column 'paymentMethod' in 'INSERT INTO'
  sql: INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?); - parameters:[7000,'Tarjeta','2025-08-13 18:51:50.240']
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'paymentMethod' in 'INSERT INTO'",
    sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: [ 7000, 'Tarjeta', '2025-08-13 18:51:50.240' ]
  },
  sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
  parameters: [ 7000, 'Tarjeta', '2025-08-13 18:51:50.240' ]
}
Executing (18a8dbdb-d0d9-4db8-825f-7c3c783aefbf): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (18a8dbdb-d0d9-4db8-825f-7c3c783aefbf): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (18a8dbdb-d0d9-4db8-825f-7c3c783aefbf): ROLLBACK;
Error confirming sale: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.insert (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:308:21)
    at async model.save (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:2490:35)
    at async SnackBarSale.create (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1362:12)
    at async confirmSale (file:///root/gestionteatro/backend/controllers/saleController.js:14:25) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:329, no: 1054, SQLState: 42S22) Unknown column 'paymentMethod' in 'INSERT INTO'
  sql: INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?); - parameters:[7000,'Tarjeta','2025-08-13 18:52:19.178']
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'paymentMethod' in 'INSERT INTO'",
    sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: [ 7000, 'Tarjeta', '2025-08-13 18:52:19.178' ]
  },
  original: SqlError: (conn:329, no: 1054, SQLState: 42S22) Unknown column 'paymentMethod' in 'INSERT INTO'
  sql: INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?); - parameters:[7000,'Tarjeta','2025-08-13 18:52:19.178']
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'paymentMethod' in 'INSERT INTO'",
    sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: [ 7000, 'Tarjeta', '2025-08-13 18:52:19.178' ]
  },
  sql: 'INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);',
  parameters: [ 7000, 'Tarjeta', '2025-08-13 18:52:19.178' ]
}
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:330, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:330, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:330, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:330, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:332, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:332, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:333, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:333, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Error fetching sales history: Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:53:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MySQLQueryInterface.select (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/abstract/query-interface.js:407:12)
    at async SnackBarSale.findAll (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1140:21)
    at async getSalesHistory (file:///root/gestionteatro/backend/controllers/saleController.js:83:23) {
  name: 'SequelizeDatabaseError',
  parent: SqlError: (conn:334, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  original: SqlError: (conn:334, no: 1054, SQLState: 42S22) Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'
  sql: SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.u... - parameters:[]
      at module.exports.createError (/root/gestionteatro/backend/node_modules/mariadb/lib/misc/errors.js:66:10)
      at PacketNodeEncoded.readError (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet.js:588:19)
      at Query.handleErrorPacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:92:24)
      at Query.readResponsePacket (/root/gestionteatro/backend/node_modules/mariadb/lib/cmd/parser.js:70:21)
      at PacketInputStream.receivePacketBasic (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:85:9)
      at PacketInputStream.onData (/root/gestionteatro/backend/node_modules/mariadb/lib/io/packet-input-stream.js:135:20)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    sqlMessage: "Unknown column 'SnackBarSale.paymentMethod' in 'SELECT'",
    sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
    fatal: false,
    errno: 1054,
    sqlState: '42S22',
    code: 'ER_BAD_FIELD_ERROR',
    parameters: undefined
  },
  sql: 'SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;',
  parameters: {}
}
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_1`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_2' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_2`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` ADD `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_3' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_3`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_4' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_4`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_5' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_5`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_6' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_6`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (4ccaa278-7479-40bf-8e27-d433913003af): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "prod_1754750850465",
    "productName": "Andes rubia",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p5",
    "productName": "Pizza Jamon (1/2)",
    "quantity": 1,
    "unitPrice": 14000,
    "totalPrice": 14000,
    "isHalf": true,
    "delivery": "Cocina"
  },
  {
    "productId": "prod_1754750392871",
    "productName": "Jugo Pomelo",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (4ccaa278-7479-40bf-8e27-d433913003af): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (4ccaa278-7479-40bf-8e27-d433913003af): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4ccaa278-7479-40bf-8e27-d433913003af): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4ccaa278-7479-40bf-8e27-d433913003af): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4ccaa278-7479-40bf-8e27-d433913003af): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (4ccaa278-7479-40bf-8e27-d433913003af): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4ccaa278-7479-40bf-8e27-d433913003af): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750850465';
Executing (4ccaa278-7479-40bf-8e27-d433913003af): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4ccaa278-7479-40bf-8e27-d433913003af): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (4ccaa278-7479-40bf-8e27-d433913003af): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4ccaa278-7479-40bf-8e27-d433913003af): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (4ccaa278-7479-40bf-8e27-d433913003af): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4ccaa278-7479-40bf-8e27-d433913003af): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 10;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750932347';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750932347';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750763157';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750763157';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '18';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '18';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '19';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '19';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '20';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '20';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '21';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '21';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '24';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '24';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '26';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '26';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '27';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `table_number`, `status`, `created_at`, `updated_at` FROM `kitchen_orders` AS `KitchenOrder` WHERE `KitchenOrder`.`id` = '27';
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "prod_1754750850465",
    "productName": "Andes rubia",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "prod_1754750763157",
    "productName": "Sprite lata",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "prod_1754774215722",
    "productName": "PROMO PIZZA",
    "quantity": 1,
    "unitPrice": 35000,
    "totalPrice": 35000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p7",
    "productName": "Empanada Humita",
    "quantity": 1,
    "unitPrice": 3500,
    "totalPrice": 3500,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "prod_1754750392871",
    "productName": "Jugo Pomelo",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750850465';
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750763157';
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754774215722';
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e72f99b2-c376-4ea6-bca1-8da365665930): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 11;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (a64605ca-b23c-412a-876e-ac904ec51351): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p4",
    "productName": "Pizza Muzzarella (1/2)",
    "quantity": 1,
    "unitPrice": 15000,
    "totalPrice": 15000,
    "isHalf": true,
    "delivery": "Cocina"
  },
  {
    "productId": "p5",
    "productName": "Pizza Jamon",
    "quantity": 1,
    "unitPrice": 25000,
    "totalPrice": 25000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p6",
    "productName": "Empanada Carne",
    "quantity": 3,
    "unitPrice": 3500,
    "totalPrice": 10500,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p7",
    "productName": "Empanada Humita",
    "quantity": 3,
    "unitPrice": 3500,
    "totalPrice": 10500,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a64605ca-b23c-412a-876e-ac904ec51351): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (a64605ca-b23c-412a-876e-ac904ec51351): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (a64605ca-b23c-412a-876e-ac904ec51351): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (a64605ca-b23c-412a-876e-ac904ec51351): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (a64605ca-b23c-412a-876e-ac904ec51351): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (a64605ca-b23c-412a-876e-ac904ec51351): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (a64605ca-b23c-412a-876e-ac904ec51351): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (a64605ca-b23c-412a-876e-ac904ec51351): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (a64605ca-b23c-412a-876e-ac904ec51351): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (a64605ca-b23c-412a-876e-ac904ec51351): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (a64605ca-b23c-412a-876e-ac904ec51351): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 12;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p5",
    "productName": "Pizza Jamon (1/2)",
    "quantity": 1,
    "unitPrice": 14000,
    "totalPrice": 14000,
    "isHalf": true,
    "delivery": "Cocina"
  }
]
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (340f1d38-07d4-45d8-902a-93691f1cf61e): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 13;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (a276a921-5ede-401d-a774-be82b5f4921b): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p5",
    "productName": "Pizza Jamon",
    "quantity": 1,
    "unitPrice": 25000,
    "totalPrice": 25000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p5",
    "productName": "Pizza Jamon (1/2)",
    "quantity": 1,
    "unitPrice": 14000,
    "totalPrice": 14000,
    "isHalf": true,
    "delivery": "Cocina"
  }
]
Executing (a276a921-5ede-401d-a774-be82b5f4921b): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (a276a921-5ede-401d-a774-be82b5f4921b): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a276a921-5ede-401d-a774-be82b5f4921b): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a276a921-5ede-401d-a774-be82b5f4921b): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (a276a921-5ede-401d-a774-be82b5f4921b): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a276a921-5ede-401d-a774-be82b5f4921b): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (a276a921-5ede-401d-a774-be82b5f4921b): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (a276a921-5ede-401d-a774-be82b5f4921b): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (a276a921-5ede-401d-a774-be82b5f4921b): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (a276a921-5ede-401d-a774-be82b5f4921b): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (a276a921-5ede-401d-a774-be82b5f4921b): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 14;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (e133ba71-a1bc-4d10-b23f-f107ecaba070): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p3",
    "productName": "Agua sin gas",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (e133ba71-a1bc-4d10-b23f-f107ecaba070): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (e133ba71-a1bc-4d10-b23f-f107ecaba070): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (e133ba71-a1bc-4d10-b23f-f107ecaba070): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p3';
Executing (e133ba71-a1bc-4d10-b23f-f107ecaba070): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (e133ba71-a1bc-4d10-b23f-f107ecaba070): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 15;
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "prod_1754774215722",
    "productName": "PROMO PIZZA",
    "quantity": 1,
    "unitPrice": 35000,
    "totalPrice": 35000,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?);
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754774215722';
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (57efe35a-d883-47e5-bb74-81b2b1c38ad8): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 16;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_7' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_7`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_8' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_8`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` ADD `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_9' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_9`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_10' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_10`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
node:events:495
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE: address already in use :::8080
    at Server.setupListenHandle [as _listen2] (node:net:1811:16)
    at listenInCluster (node:net:1859:12)
    at Server.listen (node:net:1947:7)
    at Function.listen (/root/gestionteatro/backend/node_modules/express/lib/application.js:635:24)
    at file:///root/gestionteatro/backend/server.js:24:7
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
Emitted 'error' event on Server instance at:
    at emitErrorNT (node:net:1838:8)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  code: 'EADDRINUSE',
  errno: -98,
  syscall: 'listen',
  address: '::',
  port: 8080
}

Node.js v18.19.1
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_11' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_11`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_12' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_12`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '53';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 28;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '57';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '58';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '61';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 30;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '61';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 30;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '57';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '57';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '57';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '57';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '58';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '56';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '56';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '59';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '59';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '60';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '60';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 29;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '62';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 31;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '62';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 31;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '63';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 31;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '63';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 31;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '64';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 32;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '64';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 32;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '54';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 28;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '55';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 28;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '53';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 28;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '54';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 28;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '55';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 28;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p2",
    "productName": "Coca-Cola",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "prod_1754774215722",
    "productName": "PROMO PIZZA",
    "quantity": 1,
    "unitPrice": 35000,
    "totalPrice": 35000,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p2';
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754774215722';
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (80c83e31-a3ed-457c-8b8e-c9cc5dde2f2c): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 17;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '65';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 33;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '65';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 33;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p4",
    "productName": "Pizza Muzzarella (1/2)",
    "quantity": 1,
    "unitPrice": 15000,
    "totalPrice": 15000,
    "isHalf": true,
    "delivery": "Cocina"
  },
  {
    "productId": "p5",
    "productName": "Pizza Jamon",
    "quantity": 1,
    "unitPrice": 25000,
    "totalPrice": 25000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p6",
    "productName": "Empanada Carne",
    "quantity": 2,
    "unitPrice": 3500,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p7",
    "productName": "Empanada Humita",
    "quantity": 2,
    "unitPrice": 3500,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (cc4abb30-f010-4623-9aea-21942159e4ed): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 18;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '70';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '69';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '68';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '66';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '67';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '70';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '69';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '68';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '67';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '66';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 34;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (c373459d-e6f7-4332-ada3-127df10580f6): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p6",
    "productName": "Empanada Carne",
    "quantity": 1,
    "unitPrice": 3500,
    "totalPrice": 3500,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p7",
    "productName": "Empanada Humita",
    "quantity": 1,
    "unitPrice": 3500,
    "totalPrice": 3500,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p5",
    "productName": "Pizza Jamon",
    "quantity": 1,
    "unitPrice": 25000,
    "totalPrice": 25000,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c373459d-e6f7-4332-ada3-127df10580f6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (c373459d-e6f7-4332-ada3-127df10580f6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c373459d-e6f7-4332-ada3-127df10580f6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (c373459d-e6f7-4332-ada3-127df10580f6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c373459d-e6f7-4332-ada3-127df10580f6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (c373459d-e6f7-4332-ada3-127df10580f6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c373459d-e6f7-4332-ada3-127df10580f6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (c373459d-e6f7-4332-ada3-127df10580f6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c373459d-e6f7-4332-ada3-127df10580f6): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 19;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p7",
    "productName": "Empanada Humita",
    "quantity": 1,
    "unitPrice": 3500,
    "totalPrice": 3500,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (8a45bff9-b265-4076-9446-3682998cb1b2): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 20;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '72';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '76';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 36;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '72';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '76';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 36;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '73';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '75';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 36;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '73';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '75';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 36;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '71';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `title`, `description`, `producer`, `date`, `time`, `hasBar`, `capacity`, `availableSeats`, `posterUrl`, `promoText`, `doorPrice`, `advancePrice`, `hasPromo`, `promoName`, `promoPrice` FROM `shows` AS `Show`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p5",
    "productName": "Pizza Jamon (1/2)",
    "quantity": 1,
    "unitPrice": 14000,
    "totalPrice": 14000,
    "isHalf": true,
    "delivery": "Cocina"
  },
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": 12000,
    "totalPrice": 12000,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (6c9ef450-e8eb-4380-a8e7-a324dd1f5b2b): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 21;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '78';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 37;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '78';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 37;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '77';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 37;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '77';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 37;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): CREATE TABLE IF NOT EXISTS `combos` (`id` VARCHAR(255) , `name` VARCHAR(255) NOT NULL, `price` DECIMAL(10,2) NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): CREATE TABLE IF NOT EXISTS `combo_items` (`id` INTEGER auto_increment , `comboId` VARCHAR(255) NOT NULL, `label` VARCHAR(255) NOT NULL, PRIMARY KEY (`id`), FOREIGN KEY (`comboId`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `combo_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_13' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_13`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_14' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_14`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'comboitem_products' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): CREATE TABLE IF NOT EXISTS `comboitem_products` (`combo_item_id` INTEGER , `product_id` VARCHAR(255) , PRIMARY KEY (`combo_item_id`, `product_id`), FOREIGN KEY (`combo_item_id`) REFERENCES `combo_items` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
Executing (default): SHOW INDEX FROM `comboitem_products`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='combo_items' AND constraint_name = 'combo_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `combo_items` DROP FOREIGN KEY `combo_items_ibfk_1`;
Executing (default): ALTER TABLE `combo_items` ADD FOREIGN KEY (`comboId`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `combo_items` CHANGE `label` `label` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `combo_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_15' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_15`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_16' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_16`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'comboitem_products' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `comboitem_products`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'comboitem_products' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `comboitem_products`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (73fbd8a0-db71-4132-b5aa-a499d1fdc521): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 0,
    "totalPrice": 0,
    "isHalf": false,
    "delivery": "Barra",
    "comboId": "combo1"
  }
]
Executing (73fbd8a0-db71-4132-b5aa-a499d1fdc521): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (73fbd8a0-db71-4132-b5aa-a499d1fdc521): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (73fbd8a0-db71-4132-b5aa-a499d1fdc521): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (73fbd8a0-db71-4132-b5aa-a499d1fdc521): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (73fbd8a0-db71-4132-b5aa-a499d1fdc521): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 22;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combo_items` ADD `name` VARCHAR(255) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='combo_items' AND constraint_name = 'combo_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `combo_items` DROP FOREIGN KEY `combo_items_ibfk_1`;
Executing (default): ALTER TABLE `combo_items` ADD FOREIGN KEY (`comboId`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE (REFERENCED_TABLE_NAME = 'combo_items' AND REFERENCED_TABLE_SCHEMA = 'onirico_sur_db' AND REFERENCED_COLUMN_NAME = 'label') OR (TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db' AND COLUMN_NAME = 'label' AND REFERENCED_TABLE_NAME IS NOT NULL)
/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110
      delete data.meta;
      ^

TypeError: Cannot delete property 'meta' of [object Array]
    at Query.formatResults (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110:7)
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:73:17)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:16
    at async MySQLQueryInterface.removeColumn (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mysql/query-interface.js:27:23)
    at async ComboItem.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:967:13)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9)

Node.js v18.19.1
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='combo_items' AND constraint_name = 'combo_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `combo_items` DROP FOREIGN KEY `combo_items_ibfk_1`;
Executing (default): ALTER TABLE `combo_items` ADD FOREIGN KEY (`comboId`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE (REFERENCED_TABLE_NAME = 'combo_items' AND REFERENCED_TABLE_SCHEMA = 'onirico_sur_db' AND REFERENCED_COLUMN_NAME = 'label') OR (TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db' AND COLUMN_NAME = 'label' AND REFERENCED_TABLE_NAME IS NOT NULL)
/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110
      delete data.meta;
      ^

TypeError: Cannot delete property 'meta' of [object Array]
    at Query.formatResults (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110:7)
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:73:17)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:16
    at async MySQLQueryInterface.removeColumn (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mysql/query-interface.js:27:23)
    at async ComboItem.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:967:13)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9)

Node.js v18.19.1
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='combo_items' AND constraint_name = 'combo_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `combo_items` DROP FOREIGN KEY `combo_items_ibfk_1`;
Executing (default): ALTER TABLE `combo_items` ADD FOREIGN KEY (`comboId`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE (REFERENCED_TABLE_NAME = 'combo_items' AND REFERENCED_TABLE_SCHEMA = 'onirico_sur_db' AND REFERENCED_COLUMN_NAME = 'label') OR (TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db' AND COLUMN_NAME = 'label' AND REFERENCED_TABLE_NAME IS NOT NULL)
/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110
      delete data.meta;
      ^

TypeError: Cannot delete property 'meta' of [object Array]
    at Query.formatResults (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110:7)
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:73:17)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:16
    at async MySQLQueryInterface.removeColumn (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mysql/query-interface.js:27:23)
    at async ComboItem.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:967:13)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9)

Node.js v18.19.1
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE (REFERENCED_TABLE_NAME = 'combo_items' AND REFERENCED_TABLE_SCHEMA = 'onirico_sur_db' AND REFERENCED_COLUMN_NAME = 'comboId') OR (TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db' AND COLUMN_NAME = 'comboId' AND REFERENCED_TABLE_NAME IS NOT NULL)
/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110
      delete data.meta;
      ^

TypeError: Cannot delete property 'meta' of [object Array]
    at Query.formatResults (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110:7)
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:73:17)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:16
    at async MySQLQueryInterface.removeColumn (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mysql/query-interface.js:27:23)
    at async ComboItem.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:967:13)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9)

Node.js v18.19.1
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE (REFERENCED_TABLE_NAME = 'combo_items' AND REFERENCED_TABLE_SCHEMA = 'onirico_sur_db' AND REFERENCED_COLUMN_NAME = 'comboId') OR (TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db' AND COLUMN_NAME = 'comboId' AND REFERENCED_TABLE_NAME IS NOT NULL)
/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110
      delete data.meta;
      ^

TypeError: Cannot delete property 'meta' of [object Array]
    at Query.formatResults (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:110:7)
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mariadb/query.js:73:17)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:16
    at async MySQLQueryInterface.removeColumn (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mysql/query-interface.js:27:23)
    at async ComboItem.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:967:13)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9)

Node.js v18.19.1
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combo_items` ADD `combo_id` VARCHAR(255) NOT NULL, ADD CONSTRAINT `combo_items_combo_id_foreign_idx` FOREIGN KEY (`combo_id`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `combo_items` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `combo_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_19' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_19`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_20' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_20`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'comboitem_products' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `comboitem_products`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'comboitem_products' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `comboitem_products`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754774215722';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754774215722';
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;

> onirico-sur-backend@1.0.0 dev
> nodemon server.js --host

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node server.js --host`[39m
node:events:495
      throw er; // Unhandled 'error' event
      ^

Error: EBADF: bad file descriptor, read
Emitted 'error' event on ReadStream instance at:
    at emitErrorNT (node:internal/streams/destroy:151:8)
    at errorOrDestroy (node:internal/streams/destroy:214:7)
    at node:internal/fs/streams:260:9
    at FSReqCallback.wrapper [as oncomplete] (node:fs:677:5) {
  errno: -9,
  code: 'EBADF',
  syscall: 'read'
}

Node.js v18.19.1
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Workshop`.`id`, `Workshop`.`name`, `Workshop`.`schedule`, `Workshop`.`startDate`, `Workshop`.`endDate`, `Workshop`.`teacher`, `Workshop`.`fee`, `students`.`id` AS `students.id`, `students`.`lastName` AS `students.lastName`, `students`.`firstName` AS `students.firstName`, `students`.`birthDate` AS `students.birthDate`, `students`.`phone` AS `students.phone`, `students`.`email` AS `students.email`, `students->workshop_students`.`workshop_id` AS `students.workshop_students.workshop_id`, `students->workshop_students`.`student_id` AS `students.workshop_students.student_id` FROM `workshops` AS `Workshop` LEFT OUTER JOIN ( `workshop_students` AS `students->workshop_students` INNER JOIN `students` AS `students` ON `students`.`id` = `students->workshop_students`.`student_id`) ON `Workshop`.`id` = `students->workshop_students`.`workshop_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (c12f585c-e247-4817-8941-b92743899f0a): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "prod_1754751084970",
    "productName": "Heineken",
    "quantity": 1,
    "unitPrice": "7000.00",
    "totalPrice": "7000.00",
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p5",
    "productName": "Pizza Jamon (1/2)",
    "quantity": 1,
    "unitPrice": "14000.00",
    "totalPrice": "14000.00",
    "isHalf": true,
    "delivery": "Cocina"
  },
  {
    "productId": "p6",
    "productName": "Empanada Carne",
    "quantity": 1,
    "unitPrice": "3500.00",
    "totalPrice": "3500.00",
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p7",
    "productName": "Empanada Humita",
    "quantity": 1,
    "unitPrice": "3500.00",
    "totalPrice": "3500.00",
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": "12000.00",
    "totalPrice": "12000.00",
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (c12f585c-e247-4817-8941-b92743899f0a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754751084970';
Executing (c12f585c-e247-4817-8941-b92743899f0a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c12f585c-e247-4817-8941-b92743899f0a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (c12f585c-e247-4817-8941-b92743899f0a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c12f585c-e247-4817-8941-b92743899f0a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (c12f585c-e247-4817-8941-b92743899f0a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c12f585c-e247-4817-8941-b92743899f0a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (c12f585c-e247-4817-8941-b92743899f0a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c12f585c-e247-4817-8941-b92743899f0a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (c12f585c-e247-4817-8941-b92743899f0a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (c12f585c-e247-4817-8941-b92743899f0a): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 23;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p9",
    "productName": "Papas Fritas",
    "quantity": 1,
    "unitPrice": "3000.00",
    "totalPrice": "3000.00",
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "prod_1754750392871",
    "productName": "Jugo Pomelo",
    "quantity": 1,
    "unitPrice": "4000.00",
    "totalPrice": "4000.00",
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p6",
    "productName": "Empanada Carne",
    "quantity": 1,
    "unitPrice": "3500.00",
    "totalPrice": "3500.00",
    "isHalf": false,
    "delivery": "Cocina"
  },
  {
    "productId": "p8",
    "productName": "Fernet con Coca",
    "quantity": 1,
    "unitPrice": "12000.00",
    "totalPrice": "12000.00",
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p9';
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p8';
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (9c7dc504-e036-44a4-ae3e-354339684c85): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 24;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '71';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '74';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '74';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 35;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '82';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 38;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '85';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 39;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '82';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 38;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '85';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 39;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): INSERT INTO `combos` (`id`,`name`,`price`) VALUES (?,?,?);
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`) VALUES (DEFAULT,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5', 'prod_1754774215722');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 1;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (1,'p4'),(1,'p5'),(1,'prod_1754774215722');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`) VALUES (DEFAULT,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 2;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (2,'p6'),(2,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`) VALUES (DEFAULT,?,?);
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combo_items` ADD `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `combo_items` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='combo_items' AND constraint_name = 'combo_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `combo_items` DROP FOREIGN KEY `combo_items_ibfk_1`;
Executing (default): ALTER TABLE `combo_items` ADD FOREIGN KEY (`combo_id`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `combo_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_23' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_23`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_24' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_24`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'comboitem_products' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `comboitem_products`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'comboitem_products' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `comboitem_products`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756907155331'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5', 'prod_1754774215722');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 4;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (4,'p4'),(4,'p5'),(4,'prod_1754774215722');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 5;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (5,'p6'),(5,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 6;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (6,'p1'),(6,'prod_1754750850465'),(6,'prod_1754750886576'),(6,'prod_1754750932347'),(6,'prod_1754750965020'),(6,'prod_1754750994706'),(6,'prod_1754751038545'),(6,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p2', 'prod_1754750763157', 'prod_1754750810470');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 7;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (7,'p2'),(7,'prod_1754750763157'),(7,'prod_1754750810470');
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (1c775ab8-777f-4412-af60-070992e3a973): START TRANSACTION;
Received order for confirmation: []
Executing (1c775ab8-777f-4412-af60-070992e3a973): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (1c775ab8-777f-4412-af60-070992e3a973): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (1c775ab8-777f-4412-af60-070992e3a973): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (1c775ab8-777f-4412-af60-070992e3a973): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (1c775ab8-777f-4412-af60-070992e3a973): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (1c775ab8-777f-4412-af60-070992e3a973): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (1c775ab8-777f-4412-af60-070992e3a973): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (1c775ab8-777f-4412-af60-070992e3a973): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (1c775ab8-777f-4412-af60-070992e3a973): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (1c775ab8-777f-4412-af60-070992e3a973): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754751084970';
Executing (1c775ab8-777f-4412-af60-070992e3a973): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (1c775ab8-777f-4412-af60-070992e3a973): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p2';
Executing (1c775ab8-777f-4412-af60-070992e3a973): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (1c775ab8-777f-4412-af60-070992e3a973): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 25;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Cerveza', 'Gaseosa', 'Agua', 'Agua Saborizada', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combo_items` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='combo_items' AND constraint_name = 'combo_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `combo_items` DROP FOREIGN KEY `combo_items_ibfk_1`;
Executing (default): ALTER TABLE `combo_items` ADD FOREIGN KEY (`combo_id`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `combo_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): SHOW INDEX FROM `combo_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_25' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_25`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_26' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_26`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'comboitem_products' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `comboitem_products`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'comboitem_products' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `comboitem_products`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): UPDATE `combos` SET `price`=? WHERE `id` = ?
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756907155331'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5', 'prod_1754774215722');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 8;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (8,'p4'),(8,'p5'),(8,'prod_1754774215722');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 9;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (9,'p6'),(9,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 10;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (10,'p1'),(10,'prod_1754750850465'),(10,'prod_1754750886576'),(10,'prod_1754750932347'),(10,'prod_1754750965020'),(10,'prod_1754750994706'),(10,'prod_1754751038545'),(10,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p2', 'prod_1754750763157', 'prod_1754750810470');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 11;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (11,'p2'),(11,'prod_1754750763157'),(11,'prod_1754750810470');
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): START TRANSACTION;
Received order for confirmation: []
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750763157';
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2352dea3-ca16-4917-afc1-5006e9c8cbba): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 26;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` ORDER BY `SnackBarSale`.`saleDate` DESC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756907155331'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5', 'prod_1754774215722');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 12;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (12,'p4'),(12,'p5'),(12,'prod_1754774215722');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 13;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (13,'p6'),(13,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 14;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (14,'p1'),(14,'prod_1754750850465'),(14,'prod_1754750886576'),(14,'prod_1754750932347'),(14,'prod_1754750965020'),(14,'prod_1754750994706'),(14,'prod_1754751038545'),(14,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p2', 'prod_1754750763157', 'prod_1754750810470');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 15;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (15,'p2'),(15,'prod_1754750763157'),(15,'prod_1754750810470');
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): START TRANSACTION;
Received order for confirmation: []
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p5';
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p2';
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (6782d46c-2d04-48f7-9930-8acede9c100f): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 27;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756907155331'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5', 'prod_1754774215722');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 16;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (16,'p4'),(16,'p5'),(16,'prod_1754774215722');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 17;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (17,'p6'),(17,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 18;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (18,'p6'),(18,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 19;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (19,'p1'),(19,'prod_1754750850465'),(19,'prod_1754750886576'),(19,'prod_1754750932347'),(19,'prod_1754750965020'),(19,'prod_1754750994706'),(19,'prod_1754751038545'),(19,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 20;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (20,'p1'),(20,'prod_1754750850465'),(20,'prod_1754750886576'),(20,'prod_1754750932347'),(20,'prod_1754750965020'),(20,'prod_1754750994706'),(20,'prod_1754751038545'),(20,'prod_1754751084970');
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756907155331';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Bebida', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
node:internal/process/promises:288
            triggerUncaughtException(err, true /* fromPromise */);
            ^

Error
    at Query.run (/root/gestionteatro/backend/node_modules/sequelize/lib/dialects/mysql/query.js:52:25)
    at /root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:315:28
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async SnackBarProduct.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:984:11)
    at async Sequelize.sync (/root/gestionteatro/backend/node_modules/sequelize/lib/sequelize.js:377:9) {
  name: 'SequelizeDatabaseError',
  parent: Error: Data truncated for column 'category' at row 1
      at Packet.asError (/root/gestionteatro/node_modules/mysql2/lib/packets/packet.js:740:17)
      at Query.execute (/root/gestionteatro/node_modules/mysql2/lib/commands/command.js:29:26)
      at Connection.handlePacket (/root/gestionteatro/node_modules/mysql2/lib/base/connection.js:475:34)
      at PacketParser.onPacket (/root/gestionteatro/node_modules/mysql2/lib/base/connection.js:93:12)
      at PacketParser.executeStart (/root/gestionteatro/node_modules/mysql2/lib/packet_parser.js:75:16)
      at Socket.<anonymous> (/root/gestionteatro/node_modules/mysql2/lib/base/connection.js:100:25)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    code: 'WARN_DATA_TRUNCATED',
    errno: 1265,
    sqlState: '01000',
    sqlMessage: "Data truncated for column 'category' at row 1",
    sql: "ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Bebida', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;",
    parameters: undefined
  },
  original: Error: Data truncated for column 'category' at row 1
      at Packet.asError (/root/gestionteatro/node_modules/mysql2/lib/packets/packet.js:740:17)
      at Query.execute (/root/gestionteatro/node_modules/mysql2/lib/commands/command.js:29:26)
      at Connection.handlePacket (/root/gestionteatro/node_modules/mysql2/lib/base/connection.js:475:34)
      at PacketParser.onPacket (/root/gestionteatro/node_modules/mysql2/lib/base/connection.js:93:12)
      at PacketParser.executeStart (/root/gestionteatro/node_modules/mysql2/lib/packet_parser.js:75:16)
      at Socket.<anonymous> (/root/gestionteatro/node_modules/mysql2/lib/base/connection.js:100:25)
      at Socket.emit (node:events:517:28)
      at addChunk (node:internal/streams/readable:368:12)
      at readableAddChunk (node:internal/streams/readable:341:9)
      at Readable.push (node:internal/streams/readable:278:10) {
    code: 'WARN_DATA_TRUNCATED',
    errno: 1265,
    sqlState: '01000',
    sqlMessage: "Data truncated for column 'category' at row 1",
    sql: "ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Bebida', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;",
    parameters: undefined
  },
  sql: "ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Bebida', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;",
  parameters: {}
}

Node.js v18.19.1
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshops' AND TABLE_SCHEMA = 'onirico_sur_db'
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SHOW FULL COLUMNS FROM `workshops`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshops' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `workshops` CHANGE `schedule` `schedule` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `startDate` `startDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `endDate` `endDate` DATETIME;
Executing (default): ALTER TABLE `workshops` CHANGE `teacher` `teacher` VARCHAR(255);
Executing (default): ALTER TABLE `workshops` CHANGE `fee` `fee` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `workshops`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `lastName` `lastName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `firstName` `firstName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `students` CHANGE `birthDate` `birthDate` DATETIME;
Executing (default): ALTER TABLE `students` CHANGE `phone` `phone` VARCHAR(255);
Executing (default): ALTER TABLE `students` CHANGE `email` `email` VARCHAR(255);
Executing (default): SHOW INDEX FROM `students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'shows' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `shows`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'shows' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `title` `title` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `shows` CHANGE `description` `description` TEXT;
Executing (default): ALTER TABLE `shows` CHANGE `producer` `producer` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `date` `date` DATETIME;
Executing (default): ALTER TABLE `shows` CHANGE `time` `time` TIME;
Executing (default): ALTER TABLE `shows` CHANGE `hasBar` `hasBar` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `capacity` `capacity` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `availableSeats` `availableSeats` INTEGER;
Executing (default): ALTER TABLE `shows` CHANGE `posterUrl` `posterUrl` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoText` `promoText` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `doorPrice` `doorPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `advancePrice` `advancePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `shows` CHANGE `hasPromo` `hasPromo` TINYINT(1);
Executing (default): ALTER TABLE `shows` CHANGE `promoName` `promoName` VARCHAR(255);
Executing (default): ALTER TABLE `shows` CHANGE `promoPrice` `promoPrice` DECIMAL(10,2);
Executing (default): SHOW INDEX FROM `shows`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'snackbarproducts' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `snackbarproducts`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'snackbarproducts' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `category` `category` ENUM('Bebida', 'Pizza', 'Empanada', 'Trago', 'Snack') NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `brand` `brand` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `size` `size` VARCHAR(255);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `purchasePrice` `purchasePrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `sellPrice` `sellPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `stock` `stock` INTEGER;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `delivery` `delivery` ENUM('Barra', 'Cocina');
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `canBeHalf` `canBeHalf` TINYINT(1);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `halfPrice` `halfPrice` DECIMAL(10,2);
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `createdAt` `createdAt` DATETIME NOT NULL;
Executing (default): ALTER TABLE `snackbarproducts` CHANGE `updatedAt` `updatedAt` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `snackbarproducts`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combos' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combos`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combos' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `combos` CHANGE `price` `price` DECIMAL(10,2) NOT NULL;
Executing (default): SHOW INDEX FROM `combos`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'combo_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `combo_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'combo_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `combo_items` CHANGE `name` `name` VARCHAR(255) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='combo_items' AND constraint_name = 'combo_items_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `combo_items` DROP FOREIGN KEY `combo_items_ibfk_1`;
Executing (default): ALTER TABLE `combo_items` ADD FOREIGN KEY (`combo_id`) REFERENCES `combos` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `combo_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): SHOW INDEX FROM `combo_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_orders' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_orders`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_orders' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `table_number` `table_number` INTEGER NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `created_at` `created_at` DATETIME NOT NULL;
Executing (default): ALTER TABLE `kitchen_orders` CHANGE `updated_at` `updated_at` DATETIME NOT NULL;
Executing (default): SHOW INDEX FROM `kitchen_orders`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'kitchen_order_items' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `kitchen_order_items`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'kitchen_order_items' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_31' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_31`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`order_id`) REFERENCES `kitchen_orders` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='kitchen_order_items' AND constraint_name = 'kitchen_order_items_ibfk_32' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `kitchen_order_items` DROP FOREIGN KEY `kitchen_order_items_ibfk_32`;
Executing (default): ALTER TABLE `kitchen_order_items` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `quantity` `quantity` INTEGER NOT NULL DEFAULT 1;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `price_at_sale` `price_at_sale` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `ishalf` `ishalf` TINYINT(1) NOT NULL DEFAULT false;
Executing (default): ALTER TABLE `kitchen_order_items` CHANGE `status` `status` ENUM('pendiente', 'listo', 'entregado') NOT NULL DEFAULT 'pendiente';
Executing (default): SHOW INDEX FROM `kitchen_order_items`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarPurchases' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarPurchases`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarPurchases' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarPurchases' AND constraint_name = 'SnackBarPurchases_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarPurchases` DROP FOREIGN KEY `SnackBarPurchases_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarPurchases` ADD FOREIGN KEY (`product_id`) REFERENCES `snackbarproducts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_price` `purchase_price` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarPurchases` CHANGE `purchase_date` `purchase_date` DATETIME;
Executing (default): SHOW INDEX FROM `SnackBarPurchases`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'workshop_students' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `workshop_students`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'workshop_students' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `workshop_students`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'comboitem_products' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `comboitem_products`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'comboitem_products' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): SHOW INDEX FROM `comboitem_products`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSales' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSales`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSales' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `total` `total` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `saleDate` `saleDate` DATETIME;
Executing (default): ALTER TABLE `SnackBarSales` CHANGE `paymentMethod` `paymentMethod` VARCHAR(255) NOT NULL;
Executing (default): SHOW INDEX FROM `SnackBarSales`
Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'SnackBarSaleItems' AND TABLE_SCHEMA = 'onirico_sur_db'
Executing (default): SHOW FULL COLUMNS FROM `SnackBarSaleItems`;
Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'SnackBarSaleItems' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='onirico_sur_db' AND REFERENCED_TABLE_NAME IS NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `productName` `productName` VARCHAR(255) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `quantity` `quantity` INTEGER NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `unitPrice` `unitPrice` DECIMAL(10,2) NOT NULL;
Executing (default): ALTER TABLE `SnackBarSaleItems` CHANGE `totalPrice` `totalPrice` DECIMAL(10,2) NOT NULL;
Executing (default): SELECT CONSTRAINT_CATALOG AS constraintCatalog, CONSTRAINT_NAME AS constraintName, CONSTRAINT_SCHEMA AS constraintSchema, CONSTRAINT_TYPE AS constraintType, TABLE_NAME AS tableName, TABLE_SCHEMA AS tableSchema from INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE table_name='SnackBarSaleItems' AND constraint_name = 'SnackBarSaleItems_ibfk_1' AND TABLE_SCHEMA = 'onirico_sur_db';
Executing (default): ALTER TABLE `SnackBarSaleItems` DROP FOREIGN KEY `SnackBarSaleItems_ibfk_1`;
Executing (default): ALTER TABLE `SnackBarSaleItems` ADD FOREIGN KEY (`sale_id`) REFERENCES `SnackBarSales` (`id`) ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): SHOW INDEX FROM `SnackBarSaleItems`
Server is running on port 8080.
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): INSERT INTO `combos` (`id`,`name`,`price`) VALUES (?,?,?);
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 26;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (26,'p4'),(26,'p5');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756915311454';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756915311454';
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756915311454'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 28;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (28,'p4'),(28,'p5');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 29;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (29,'p1'),(29,'p2'),(29,'p3'),(29,'prod_1754750392871'),(29,'prod_1754750763157'),(29,'prod_1754750810470'),(29,'prod_1754750850465'),(29,'prod_1754750886576'),(29,'prod_1754750932347'),(29,'prod_1754750965020'),(29,'prod_1754750994706'),(29,'prod_1754751038545'),(29,'prod_1754751084970');
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756915311454';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756915311454';
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756915311454'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 30;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (30,'p4'),(30,'p5');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 31;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (31,'p1'),(31,'p2'),(31,'p3'),(31,'prod_1754750392871'),(31,'prod_1754750763157'),(31,'prod_1754750810470'),(31,'prod_1754750850465'),(31,'prod_1754750886576'),(31,'prod_1754750932347'),(31,'prod_1754750965020'),(31,'prod_1754750994706'),(31,'prod_1754751038545'),(31,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 32;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (32,'p1'),(32,'p2'),(32,'p3'),(32,'prod_1754750392871'),(32,'prod_1754750763157'),(32,'prod_1754750810470'),(32,'prod_1754750850465'),(32,'prod_1754750886576'),(32,'prod_1754750932347'),(32,'prod_1754750965020'),(32,'prod_1754750994706'),(32,'prod_1754751038545'),(32,'prod_1754751084970');
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756915311454';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): START TRANSACTION;
Received order for confirmation: []
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p2';
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750965020';
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (4dc3a68f-3bf8-4f10-83c0-97dcb6e3d303): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 30;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): START TRANSACTION;
Received order for confirmation: []
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750763157';
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750850465';
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b48cd65-6010-4289-af18-5f11430e43c6): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 31;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (1f08ce43-deaf-46d6-afef-a5940f109161): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 2,
    "unitPrice": 7000,
    "totalPrice": 14000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (1f08ce43-deaf-46d6-afef-a5940f109161): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (1f08ce43-deaf-46d6-afef-a5940f109161): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (1f08ce43-deaf-46d6-afef-a5940f109161): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (1f08ce43-deaf-46d6-afef-a5940f109161): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (1f08ce43-deaf-46d6-afef-a5940f109161): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 32;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): INSERT INTO `combos` (`id`,`name`,`price`) VALUES (?,?,?);
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 33;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (33,'p6'),(33,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 34;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (34,'p1'),(34,'p2'),(34,'p3'),(34,'prod_1754750392871'),(34,'prod_1754750763157'),(34,'prod_1754750810470'),(34,'prod_1754750850465'),(34,'prod_1754750886576'),(34,'prod_1754750932347'),(34,'prod_1754750965020'),(34,'prod_1754750994706'),(34,'prod_1754751038545'),(34,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 35;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (35,'p1'),(35,'p2'),(35,'p3'),(35,'prod_1754750392871'),(35,'prod_1754750763157'),(35,'prod_1754750810470'),(35,'prod_1754750850465'),(35,'prod_1754750886576'),(35,'prod_1754750932347'),(35,'prod_1754750965020'),(35,'prod_1754750994706'),(35,'prod_1754751038545'),(35,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756928955476';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756915311454';
Executing (default): UPDATE `combos` SET `name`=? WHERE `id` = ?
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756915311454'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p4', 'p5');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 37;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (37,'p4'),(37,'p5');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 38;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (38,'p1'),(38,'p2'),(38,'p3'),(38,'prod_1754750392871'),(38,'prod_1754750763157'),(38,'prod_1754750810470'),(38,'prod_1754750850465'),(38,'prod_1754750886576'),(38,'prod_1754750932347'),(38,'prod_1754750965020'),(38,'prod_1754750994706'),(38,'prod_1754751038545'),(38,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 39;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (39,'p1'),(39,'p2'),(39,'p3'),(39,'prod_1754750392871'),(39,'prod_1754750763157'),(39,'prod_1754750810470'),(39,'prod_1754750850465'),(39,'prod_1754750886576'),(39,'prod_1754750932347'),(39,'prod_1754750965020'),(39,'prod_1754750994706'),(39,'prod_1754751038545'),(39,'prod_1754751084970');
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756915311454';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): START TRANSACTION;
Received order for confirmation: []
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750763157';
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p3';
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (2567525e-aae4-45b7-a5de-c3e4a963106e): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 33;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '98';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 45;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '98';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 45;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '99';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 45;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '102';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 46;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '105';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 47;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '99';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 45;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '102';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 46;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '105';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 47;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '100';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 45;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '103';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 46;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '106';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 47;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '100';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 45;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `price` FROM `combos` AS `Combo` WHERE `Combo`.`id` = 'combo_1756928955476';
Executing (default): UPDATE `combos` SET `price`=? WHERE `id` = ?
Executing (default): DELETE FROM `combo_items` WHERE `combo_id` = 'combo_1756928955476'
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p6', 'p7');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 40;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (40,'p6'),(40,'p7');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 41;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (41,'p1'),(41,'p2'),(41,'p3'),(41,'prod_1754750392871'),(41,'prod_1754750763157'),(41,'prod_1754750810470'),(41,'prod_1754750850465'),(41,'prod_1754750886576'),(41,'prod_1754750932347'),(41,'prod_1754750965020'),(41,'prod_1754750994706'),(41,'prod_1754751038545'),(41,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` IN ('p1', 'p2', 'p3', 'prod_1754750392871', 'prod_1754750763157', 'prod_1754750810470', 'prod_1754750850465', 'prod_1754750886576', 'prod_1754750932347', 'prod_1754750965020', 'prod_1754750994706', 'prod_1754751038545', 'prod_1754751084970');
Executing (default): SELECT `combo_item_id`, `product_id` FROM `comboitem_products` AS `comboitem_products` WHERE `comboitem_products`.`combo_item_id` = 42;
Executing (default): INSERT INTO `comboitem_products` (`combo_item_id`,`product_id`) VALUES (42,'p1'),(42,'p2'),(42,'p3'),(42,'prod_1754750392871'),(42,'prod_1754750763157'),(42,'prod_1754750810470'),(42,'prod_1754750850465'),(42,'prod_1754750886576'),(42,'prod_1754750932347'),(42,'prod_1754750965020'),(42,'prod_1754750994706'),(42,'prod_1754751038545'),(42,'prod_1754751084970');
Executing (default): INSERT INTO `combo_items` (`id`,`combo_id`,`name`,`quantity`) VALUES (DEFAULT,?,?,?);
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id` WHERE `Combo`.`id` = 'combo_1756928955476';
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Error creating product: ValidationError [SequelizeValidationError]: notNull Violation: SnackBarProduct.category cannot be null
    at InstanceValidator._validate (/root/gestionteatro/backend/node_modules/sequelize/lib/instance-validator.js:50:13)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async InstanceValidator._validateAndRunHooks (/root/gestionteatro/backend/node_modules/sequelize/lib/instance-validator.js:60:7)
    at async InstanceValidator.validate (/root/gestionteatro/backend/node_modules/sequelize/lib/instance-validator.js:54:12)
    at async model.save (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:2426:7)
    at async SnackBarProduct.create (/root/gestionteatro/backend/node_modules/sequelize/lib/model.js:1362:12)
    at async createProduct (file:///root/gestionteatro/backend/controllers/snackBarController.js:70:21) {
  errors: [
    ValidationErrorItem {
      message: 'SnackBarProduct.category cannot be null',
      type: 'notNull Violation',
      path: 'category',
      value: null,
      origin: 'CORE',
      instance: [SnackBarProduct],
      validatorKey: 'is_null',
      validatorName: null,
      validatorArgs: []
    }
  ]
}
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): INSERT INTO `snackbarproducts` (`id`,`name`,`category`,`purchasePrice`,`sellPrice`,`stock`,`delivery`,`canBeHalf`,`halfPrice`,`createdAt`,`updatedAt`) VALUES (?,?,?,?,?,?,?,?,?,?,?);
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p7",
    "productName": "Empanada Humita",
    "quantity": 2,
    "unitPrice": 3500,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Cocina"
  }
]
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p7';
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p6';
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750763157';
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754751038545';
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (3b539abb-59c8-4c26-88ed-7421bcae240a): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 34;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '110';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '109';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '108';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '107';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '110';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '109';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '108';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '107';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 48;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '106';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 47;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '103';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 46;
Executing (default): SELECT `id`, `order_id`, `product_id`, `quantity`, `price_at_sale`, `status`, `ishalf` FROM `kitchen_order_items` AS `KitchenOrderItem` WHERE `KitchenOrderItem`.`id` = '104';
Executing (default): UPDATE `kitchen_order_items` SET `status`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` WHERE `KitchenOrder`.`id` = 47;
Executing (default): UPDATE `kitchen_orders` SET `status`=?,`updated_at`=? WHERE `id` = ?
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): START TRANSACTION;
Received order for confirmation: [
  {
    "productId": "p1",
    "productName": "Andes roja",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "p2",
    "productName": "Coca-Cola",
    "quantity": 1,
    "unitPrice": 4000,
    "totalPrice": 4000,
    "isHalf": false,
    "delivery": "Barra"
  },
  {
    "productId": "prod_1754750886576",
    "productName": "Imperial Stout",
    "quantity": 1,
    "unitPrice": 7000,
    "totalPrice": 7000,
    "isHalf": false,
    "delivery": "Barra"
  }
]
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): INSERT INTO `SnackBarSales` (`id`,`total`,`paymentMethod`,`saleDate`) VALUES (DEFAULT,?,?,?);
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): INSERT INTO `SnackBarSaleItems` (`id`,`productName`,`quantity`,`unitPrice`,`totalPrice`,`sale_id`) VALUES (DEFAULT,?,?,?,?,?);
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): INSERT INTO `kitchen_orders` (`id`,`table_number`,`status`,`created_at`,`updated_at`) VALUES (DEFAULT,?,?,?,?);
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): INSERT INTO `kitchen_order_items` (`id`,`order_id`,`product_id`,`quantity`,`price_at_sale`,`status`,`ishalf`) VALUES (DEFAULT,?,?,?,?,?,?);
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p1';
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p2';
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750886576';
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'p4';
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750392871';
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct` WHERE `SnackBarProduct`.`id` = 'prod_1754750850465';
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): UPDATE `snackbarproducts` SET `stock`=?,`updatedAt`=? WHERE `id` = ?
Executing (af435c2a-ebe1-4400-8fa5-c65936ebb0e2): COMMIT;
Executing (default): SELECT `SnackBarSale`.`id`, `SnackBarSale`.`total`, `SnackBarSale`.`paymentMethod`, `SnackBarSale`.`saleDate`, `items`.`id` AS `items.id`, `items`.`productName` AS `items.productName`, `items`.`quantity` AS `items.quantity`, `items`.`unitPrice` AS `items.unitPrice`, `items`.`totalPrice` AS `items.totalPrice`, `items`.`sale_id` AS `items.saleId`, `items`.`sale_id` AS `items.sale_id` FROM `SnackBarSales` AS `SnackBarSale` LEFT OUTER JOIN `SnackBarSaleItems` AS `items` ON `SnackBarSale`.`id` = `items`.`sale_id` WHERE `SnackBarSale`.`id` = 35;
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `KitchenOrder`.`id`, `KitchenOrder`.`table_number`, `KitchenOrder`.`status`, `KitchenOrder`.`created_at`, `KitchenOrder`.`updated_at`, `items`.`id` AS `items.id`, `items`.`order_id` AS `items.order_id`, `items`.`product_id` AS `items.product_id`, `items`.`quantity` AS `items.quantity`, `items`.`price_at_sale` AS `items.price_at_sale`, `items`.`status` AS `items.status`, `items`.`ishalf` AS `items.ishalf`, `items->product`.`id` AS `items.product.id`, `items->product`.`name` AS `items.product.name` FROM `kitchen_orders` AS `KitchenOrder` LEFT OUTER JOIN `kitchen_order_items` AS `items` ON `KitchenOrder`.`id` = `items`.`order_id` LEFT OUTER JOIN `snackbarproducts` AS `items->product` ON `items`.`product_id` = `items->product`.`id` WHERE `KitchenOrder`.`status` IN ('pendiente', 'listo') ORDER BY `KitchenOrder`.`created_at` ASC;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Ignoring invalid configuration option passed to Connection: useUTC. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
Executing (default): SELECT `id`, `name`, `category`, `brand`, `size`, `purchasePrice`, `sellPrice`, `stock`, `delivery`, `canBeHalf`, `halfPrice`, `createdAt`, `updatedAt` FROM `snackbarproducts` AS `SnackBarProduct`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
Executing (default): SELECT `Combo`.`id`, `Combo`.`name`, `Combo`.`price`, `components`.`id` AS `components.id`, `components`.`combo_id` AS `components.comboId`, `components`.`name` AS `components.name`, `components`.`quantity` AS `components.quantity`, `components->options`.`id` AS `components.options.id` FROM `combos` AS `Combo` LEFT OUTER JOIN `combo_items` AS `components` ON `Combo`.`id` = `components`.`combo_id` LEFT OUTER JOIN ( `comboitem_products` AS `components->options->comboitem_products` INNER JOIN `snackbarproducts` AS `components->options` ON `components->options`.`id` = `components->options->comboitem_products`.`product_id`) ON `components`.`id` = `components->options->comboitem_products`.`combo_item_id`;
